{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Desktop/bootcamp/Homework/Employee_Directory/employee-directory/src/App.js\";\nimport React, { Component } from \"react\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport employees from \"./employees.json\";\nimport Search from \"./components/Search\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees\n    };\n\n    this.employeeSearch = first => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const employees = this.state.employees.filter(employee => employee.name.first == first); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        employees\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, \"Employee List\", /*#__PURE__*/React.createElement(Search, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    })), this.state.employees.map(employee => /*#__PURE__*/React.createElement(EmployeeCard, {\n      name: employee.name.first + \" \" + employee.name.last,\n      image: employee.picture.large,\n      email: employee.email,\n      location: employee.location.country,\n      serviceyears: employee.registered.age,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/matt/Desktop/bootcamp/Homework/Employee_Directory/employee-directory/src/App.js"],"names":["React","Component","EmployeeCard","Wrapper","Title","employees","Search","App","state","employeeSearch","first","filter","employee","name","setState","render","map","last","picture","large","email","location","country","registered","age"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNH,MAAAA;AADM,KAFkB;;AAAA,SAM1BI,cAN0B,GAMTC,KAAK,IAAI;AACxB;AACA,YAAML,SAAS,GAAG,KAAKG,KAAL,CAAWH,SAAX,CAAqBM,MAArB,CAA4BC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcH,KAAd,IAAuBA,KAA/D,CAAlB,CAFwB,CAGxB;;AACA,WAAKI,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACD,KAXyB;AAAA;;AAc1BU,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,EAKG,KAAKP,KAAL,CAAWH,SAAX,CAAqBW,GAArB,CAAyBJ,QAAQ,iBAChC,oBAAC,YAAD;AACE,MAAA,IAAI,EAAEA,QAAQ,CAACC,IAAT,CAAcH,KAAd,GAAoB,GAApB,GAAwBE,QAAQ,CAACC,IAAT,CAAcI,IAD9C;AAEE,MAAA,KAAK,EAAEL,QAAQ,CAACM,OAAT,CAAiBC,KAF1B;AAGE,MAAA,KAAK,EAAEP,QAAQ,CAACQ,KAHlB;AAIE,MAAA,QAAQ,EAAER,QAAQ,CAACS,QAAT,CAAkBC,OAJ9B;AAKE,MAAA,YAAY,EAAEV,QAAQ,CAACW,UAAT,CAAoBC,GALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CALH,CADF;AAiBD;;AAhCyB;;AAmC5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport employees from \"./employees.json\";\nimport Search from \"./components/Search\";\n\nclass App extends Component {\n  // Setting this.state.friends to the employees json array\n  state = {\n    employees\n  };\n\n  employeeSearch = first => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const employees = this.state.employees.filter(employee => employee.name.first == first);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ employees });\n  };\n\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>Employee List\n        <Search>\n        </Search>\n        </Title>\n        {this.state.employees.map(employee => (\n          <EmployeeCard \n            name={employee.name.first+\" \"+employee.name.last}\n            image={employee.picture.large}\n            email={employee.email}\n            location={employee.location.country}\n            serviceyears={employee.registered.age}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}